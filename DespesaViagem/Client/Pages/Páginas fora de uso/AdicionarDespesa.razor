@page "/viagens/adicionar-despesa/{idViagem:int}"
@inject NavigationManager NavigationManager
@attribute [Authorize]
<PageTitle>Adicionar - Despesa</PageTitle>


@if (TipoDespesa == string.Empty)
{
    <span>Por favor, aguarde...</span>
}
else
{
    if (/*DespesasComponentes.TryGetValue(TipoDespesa, out var DespesaComponent)*/false)
    {
        <div class="d-flex flex-wrap" style="flex-direction:column; align-content:center;">
            <h3 class="card-title">Adicionar despesa com @TipoDespesa</h3>
            <div class="modal-content">
                @DespesaForm
            </div>
        </div>
    }
}


@code {
    [Parameter]
    public int IdViagem { get; set; }
    [Parameter]
    public string TipoDespesa { get; set; }

    private RenderFragment? DespesaForm;

    private bool FormularioDespesaAberto = false;

    //private Dictionary<string, RenderFragment> DespesasComponentes = new();

    protected override void OnInitialized()
    {
        string tipoDespesa = NavigationManager.Uri.Split('?').LastOrDefault()?.Split('=')?.LastOrDefault() ?? string.Empty;
        TipoDespesa = HttpUtility.UrlDecode(tipoDespesa); //Essa linha formata a string. Por exemplo na Url o valor fica como Alimenta%C3%A7%C3%A3o mas essa linha deixa com o valor correto, Alimentação

        //PopularDictionaries();
    }

    private void AbrirFormularioDespesa()
    {
        
    }

    private RenderFragment ObterDespesaForm(Type tipoDespesa)
    {
        return builder =>
        {
            builder.OpenComponent(0, tipoDespesa);
            builder.AddAttribute(1, "IdDespesa", 0);
            builder.AddAttribute(2, "FormularioFechado", EventCallback.Factory.Create(this, () =>
            {
                NavigationManager.NavigateTo($"/viagens/{IdViagem}/1");
            }));
            builder.CloseComponent();
        };
    }
    /*
    private void PopularDictionaries()
    {
        DespesasComponentes.Add("Hospedagem", builder =>
        {
            builder.OpenComponent(0, typeof(DespesaHospedagemForm));
            builder.AddAttribute(1, "IdDespesa", 0);
            builder.AddAttribute(2, "FormularioFechado", EventCallback.Factory.Create(this, () =>
            {
                NavigationManager.NavigateTo($"/viagens/{IdViagem}/1");
            }));
            builder.CloseComponent();
        });
    }
    */
}


