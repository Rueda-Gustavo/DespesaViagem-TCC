@page "/viagens/{idViagem:int}"
@inject IViagemService ViagemService

<h3>Detalhes da viagem</h3>

<div class="container mt-4">
    <div class="row">
        <!-- Coluna 1: Card da Viagem -->
        <div class="col-md-4">
            <div class="card-viagem">
                <div class="card-header-viagem">
                    <h5 class="card-title-viagem">@Viagem.NomeViagem</h5>
                </div>
                <div class="card-body">
                    <span class="status-viagem">Viagem: @Status</span>
                    <p class="card-text">@Viagem.DescricaoViagem</p>
                    <ul>
                        <li class="card-text">De: @Viagem.DataInicial</li>
                        <li class="card-text">Até: @Viagem.DataFinal</li>
                        <li>Adiantamento incial: @Viagem.Adiantamento</li>

                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <!-- Coluna 2: Grid com as Despesas -->
            @foreach (var despesa in Despesas)
            {
                <div class="list-group mb-2">
                    <a href="#" class="list-group-item list-group-item-action" aria-current="true">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@despesa.NomeDespesa</h5>
                        </div>
                        <p class="mb-1">@despesa.DescricaoDespesa</p>
                        <p class="mb-1">Data da despesa: @despesa.DataDespesa</p>
                        <p class="mb-1">R$@despesa.TotalDespesa</p>
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int IdViagem { get; set; }
    private ViagemDTO Viagem { get; set; } = new();
    private Funcionario? Funcionario { get; set; }
    private List<DespesaDTO> Despesas { get; set; } = new();
    private string Status { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Viagem = await ViagemService.GetViagem(IdViagem);

        if (Viagem.StatusViagem == StatusViagem.EmAndamento.ToString())
            Status = "Em andamento";
        else
            Status = Viagem.StatusViagem;

        await ObterDespesas();       
    }

    private async Task ObterDespesas()
    {
        Despesas = await ViagemService.ObterDespesas(Viagem.Id);
    }
}
