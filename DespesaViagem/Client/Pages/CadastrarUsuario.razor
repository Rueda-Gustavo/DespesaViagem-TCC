@page "/cadastro"
@inject IFuncionarioService FuncionarioService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Cadastro</PageTitle>

<div class="container d-flex flex-column align-items-center flex-wrap">
    <h3>Cadastro</h3>
    <EditForm Model="usuario" OnValidSubmit="HandleCadastro">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="nomeCompleto">NomeCompleto</label>
            <InputText id="nomeCompleto" @bind-Value="usuario.NomeCompleto" class="form-control"></InputText>
            <ValidationMessage For="@(() => usuario.NomeCompleto)" />
        </div>
        <div class="form-group row">
            <div class="col">
                <label for="username">Username</label>
                <InputText id="username" @bind-Value="usuario.Username" class="form-control"></InputText>
                <ValidationMessage For="@(() => usuario.Username)" />
            </div>
            <div class="col">
                <div class="col">
                    <label for="cpfFuncionario">CPF</label>
                    <InputText id="cpfFuncionario" @bind-Value="usuario.CPF" onkeypress="$(this).mask('000.000.000-00')" class="form-control" pattern="[0-9]{3}.[0-9]{3}.[0-9]{3}-[0-9]{2}"></InputText>
                    <ValidationMessage For="@(() => usuario.CPF)" />
                </div>
            </div>
            <div class="col">
                <label for="matricula">Matricula <small>(Opcional)</small></label>
                <InputText id="matricula" @bind-Value="usuario.Matricula" class="form-control"></InputText>
            </div>
        </div>
        <div class="mb-3">
            <label for="username">Senha</label>
            <InputText id="password" @bind-Value="usuario.Password" class="form-control" type="password"></InputText>
            <ValidationMessage For="@(() => usuario.Password)" />
        </div>
        <div class="mb-3">
            <label for="username">Confirmar senha</label>
            <InputText id="confirmPassword" @bind-Value="usuario.ConfirmPassword" class="form-control" type="password"></InputText>
            <ValidationMessage For="@(() => usuario.ConfirmPassword)" />
        </div>
        <button type="submit" class="btn btn-primary">Cadastrar</button>
        <div class="text-danger">
            <span>@mensagemErro</span>
        </div>
    </EditForm>
</div>
@code {
    CadastroUsuario usuario = new();

    string mensagemErro = string.Empty;

    private async void HandleCadastro()
    {
        var result = await FuncionarioService.Cadastrar(usuario);
        if (!result.Sucesso)
        {
            mensagemErro = result.Message;
            //await JSRuntime.InvokeVoidAsync("alert", $"Erro! {result.Message}");
        }
        else
        {
            mensagemErro = string.Empty;
            Console.WriteLine($"Cadastrar usuario com {usuario.Username}.");
            await JSRuntime.InvokeVoidAsync("alert", "Dados salvos com sucesso!");
            NavigationManager.NavigateTo("/");
        }
    }
}
