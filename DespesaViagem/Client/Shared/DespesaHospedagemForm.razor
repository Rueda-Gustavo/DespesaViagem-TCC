@inject IDespesasService<DespesaHospedagemDTO> DespesaHospedagemService
@inject IEnderecoService EnderecoService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IDisposable


@if (!Adicionar)
{
    <div class="modal-header">
        <h5 class="modal-title">Editar Despesa</h5>
        <button type="button" class="close" @onclick="FecharFormulario">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<div class="modal-body">
    <form @onsubmit="HandleDespesa">
        <div class="form-group row">
            <div class="col">
                <label for="NomeDespesa">Nome da Despesa</label>
                <input id="NomeDespesa" class="form-control" @bind="Despesa.NomeDespesa" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col">
                <label for="DescricaoDespesa">Descrição da Despesa</label>
                <textarea id="DescricaoDespesa" class="form-control" @bind="Despesa.DescricaoDespesa" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col">
                <label for="Logradouro">Logradouro</label>
                <input id="Logradouro" class="form-control" @bind="Endereco.Logradouro" />
            </div>
            <div class="col-auto" style="max-width: 5rem">
                <label for="NumeroCasa">Nº</label>
                <input id="NumeroCasa" class="form-control" @bind="Endereco.NumeroCasa" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col">
                <label for="Cidade">Cidade</label>
                <input id="Cidade" class="form-control" @bind="Endereco.Cidade" />
            </div>
            <div class="col">
                <label for="Estado">Estado</label>
                <input id="Estado" class="form-control" @bind="Endereco.Estado" />
            </div>
            <div class="col">
                <label for="CEP">CEP</label>
                <input id="CEP" class="form-control" onkeypress="$(this).mask('00000-000')" @bind-value="Endereco.CEP" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-auto">
                <label for="ValorDiaria">Diária</label>
                <input id="ValorDiaria" class="form-control" style="max-width:6rem" @bind="Despesa.ValorDiaria" />
            </div>
            <div class="col-auto">
                <label for="QuantidadeDias">Quantidade de dias</label>
                <input id="QuantidadeDias" class="form-control" style="max-width:5rem" @bind="Despesa.QuantidadeDias" />
            </div>
        </div>
        <button type="submit" class="btn btn-primary">
            @if (Adicionar)
            {
                <span>Salvar</span>
            }
            else
            {
                <span>Editar</span>
            }
        </button>
    </form>

</div>


@code {
    [Parameter]
    public int IdDespesa { get; set; } = 0;
    private bool Adicionar = true;
    //[Parameter]
    private DespesaHospedagemDTO Despesa { get; set; } = new();
    //[Parameter]
    private Endereco Endereco { get; set; } = new();
    [Parameter]
    public EventCallback FormularioFechado { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DespesaHospedagemService.DespesasChanged += StateHasChanged;
        if (IdDespesa > 0)
        {
            Adicionar = false;
            await GetDespesaHospedagem();
        }

    }

    public void Dispose()
    {
        DespesaHospedagemService.DespesasChanged -= StateHasChanged;
    }

    private async Task FecharFormulario()
    {
        await FormularioFechado.InvokeAsync();
    }

    private async Task GetDespesaHospedagem()
    {
        await DespesaHospedagemService.GetDespesa(IdDespesa);
        Despesa = DespesaHospedagemService.Despesa;

        await EnderecoService.GetEndereco(Despesa.IdEndereco);
        Endereco = EnderecoService.Endereco;
    }

    private async Task HandleDespesa()
    {
        await JSRuntime.InvokeVoidAsync("alert", "Dados salvos com sucesso!");
        await FecharFormulario();
    }
}
