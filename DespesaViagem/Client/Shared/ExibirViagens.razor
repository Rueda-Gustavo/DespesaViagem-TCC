@inject IViagemService ViagemService
@inject NavigationManager NavigationManager
@implements IDisposable

@if (ViagemService.Viagens == null || !ViagemService.Viagens.Any())
{
    <span>@ViagemService.Mensagem</span>
}
else
{
    @foreach (var viagem in ViagemService.Viagens)
    {
        string descricao = viagem.DescricaoViagem;
        string opacidade = string.Empty;
        if (viagem.DescricaoViagem.Length > 30)
            descricao = descricao.Substring(0, 30);

        if (viagem.StatusViagem == StatusViagem.Aberta.ToString() || viagem.StatusViagem == StatusViagem.EmAndamento.ToString())
            opacidade = "100%";                    
        else        
            opacidade = "50%";

        if (viagem.StatusViagem == StatusViagem.EmAndamento.ToString()) viagem.StatusViagem = "Em andamento";

        
        <div class="card" style="opacity:@opacidade">
            <h2 class="card-header title">@viagem.NomeViagem <button class="btn-exibir-despesas" @onclick="() =>  VerDetalhes(viagem.Id)"><FeatherList Size="24" Color="#000" StrokeWidth="1.7f" /></button></h2>
            <div>
                <h4 class="card-title">Status da viagem: @viagem.StatusViagem</h4>
                <hr />
                <h5 class="card-subtitle">Informações sobre a viagem:</h5>
                <ul>
                    <li class="card-text">Descrição da viagem: @descricao</li>
                    <li class="card-text">De: @viagem.DataInicial</li>
                    <li class="card-text">Até: @viagem.DataFinal</li>
                    <li>Adiantamento incial: @viagem.Adiantamento</li>
                </ul>
                <hr />
                <h5 style="font-weight:bold">Informações sobre o funcionário:</h5>
                <ul>
                    <li class="card-text">Nome: @viagem.Funcionario.Nome @viagem.Funcionario.Sobrenome</li>
                    <li class="card-text">Matrícula: @viagem.Funcionario.Matricula</li>
                    <li class="card-text">CPF: @viagem.Funcionario.CPF</li>
                </ul>
            </div>
        </div>
    }

}
@code {
    protected override void OnInitialized()
    {
        ViagemService.ViagensChanged += StateHasChanged;          
    }

    public void Dispose()
    {
        ViagemService.ViagensChanged -= StateHasChanged;
    }

    private void VerDetalhes(int idViagem)
    {
        NavigationManager.NavigateTo($"/viagens/{idViagem}");
    }
}
